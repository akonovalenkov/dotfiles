export EDITOR='vim'
export FZF_DEFAULT_COMMAND='rg --files';

set -o histfindnodups on
set -o histignorealldups on
set -o histignoredups on
set -o histsavenodups on
set -o noautocd


bindkey -v
bindkey -M viins ';' vi-cmd-mode
bindkey -M viins ',' vi-cmd-mode
bindkey -M viins '^T' fzf-file-widget
bindkey -M vicmd 'g' fzf-history-widget
bindkey -M vicmd '/' fzf-history-widget

bindkey -M vicmd 'v' visual-mode

cf() {
    local file

    if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
        file=$(git ls-files | fzf);
    else
        file=$(fzf)
    fi;

    if [[ -n $file ]]
    then
        if [[ -d $file ]]
        then
            cd -- $file
        else
            cd -- ${file:h}
        fi
    fi
}

clf() {
    local file

    file="$(locate -Ai -0 / | grep -z -vE '~$' | fzf --read0 -0 -1)"

    if [[ -n $file ]]
    then
        if [[ -d $file ]]
        then
            cd -- $file
        else
            cd -- ${file:h}
        fi
    fi
}


# ftpane - swtich to tmux pane by name
ftpane() {
    local panes current_window current_pane target target_window target_pane
    panes=$(tmux list-panes -s -F '#I:#P - #{pane_current_path} #{pane_current_command}')
    current_pane=$(tmux display-message -p '#I:#P')
    current_window=$(tmux display-message -p '#I')

    target=$(echo "$panes" | grep -v "$current_pane" | fzf +m --reverse) || return

    target_window=$(echo $target | awk 'BEGIN{FS=":|-"} {print$1}')
    target_pane=$(echo $target | awk 'BEGIN{FS=":|-"} {print$2}' | cut -c 1)

    if [[ $current_window -eq $target_window ]]; then
        tmux select-pane -t ${target_window}.${target_pane}
    else
        tmux select-pane -t ${target_window}.${target_pane} &&
            tmux select-window -t $target_window
    fi
}

# fkill - kill processes - list only the ones you can kill. Modified the earlier script.
fkill() {
    local pid 
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi  

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi  
}


# ALT-I - Paste the selected entry from locate output into the command line
fzf-locate-widget() {
    local selected
    if selected=$(locate / | fzf -q "$LBUFFER"); then
        LBUFFER=$selected
    fi
    zle redisplay
}

zle     -N    fzf-locate-widget
bindkey '\ei' fzf-locate-widget


# Select a docker container to start and attach to
function da() {
    local cid
    cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

    [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

# Select a running docker container to stop
function ds() {
    local cid
    cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

    [ -n "$cid" ] && docker stop "$cid"
}


# Select a docker container to remove
function drm() {
    local cid
    cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

    [ -n "$cid" ] && docker rm "$cid"
}


bindkey -M vicmd -r gUU
bindkey -M vicmd -r gg
bindkey -M vicmd -r gE
bindkey -M vicmd -r ge
bindkey -M vicmd -r ga
bindkey -M vicmd -r g~
bindkey -M vicmd -r gu
bindkey -M vicmd -r gU
bindkey -M vicmd -r g~~
bindkey -M vicmd -r guu

function vi-yank-x-clipboard {
    zle vi-yank
    echo $CUTBUFFER | clipcopy
}

zle -N vi-yank-x-clipboard

bindkey -a 'y' vi-yank-x-clipboard



function vi-put-after-from-x-clipboard () {
        LBUFFER="${LBUFFER}$(xsel -b -o)"
        local ret=$?
        zle reset-prompt
        return $ret
}

zle -N vi-put-after-from-x-clipboard
bindkey -a 'p' vi-put-after-from-x-clipboard

function vi-put-before-from-x-clipboard () {
    RBUFFER="$(xsel -b -o)${RBUFFER}"
    local ret=$?
    zle reset-prompt
    return $ret
}

zle -N vi-put-before-from-x-clipboard
bindkey -a 'P' vi-put-before-from-x-clipboard
